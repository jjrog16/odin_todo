(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>c});var o=t(537),r=t.n(o),i=t(645),a=t.n(i)()(r());a.push([e.id,"body {\n  margin: 0;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  user-select: none;\n  box-sizing: border-box;\n}\n\n.content {\n  display: flex;\n  flex: 1;\n}\n\n/* Projects */\n\n.add-item {\n  color: white;\n  background-color: red;\n  height: 32x;\n  text-align: center;\n  padding: 8px;\n  font-size: 24px;\n  /* Prevents highlighting text when user double-clicks*/\n  user-select: none;\n}\n\n.add-item:hover {\n  background-color: white;\n  color: black;\n  cursor: pointer;\n}\n\n.project-item {\n  color: white;\n  padding: 8px;\n  font-size: 24px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.delete-project {\n  font-size: 16px;\n  padding: 8px;\n}\n\n.delete-project:hover {\n  background-color: white;\n  color: black;\n  cursor: pointer;\n}\n\n.sidebar {\n  width: 300px;\n  background: black;\n  flex-shrink: 0;\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n\n.section-title {\n  font-size: 48px;\n}\n\n.sidebar .section-title {\n  color: white;\n  padding: 0px 8px 32px 8px;\n}\n\n\n/* Tasks */\n.main-container {\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 800px;\n}\n\n.task-container {\n  display: flex;\n  flex-flow: column wrap;\n  justify-content: center;\n  align-items: center;\n}\n\n.main-bottom {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n}\n\n.task-contents {\n  border: 1px solid #eee;\n  box-shadow: 2px 4px 16px rgba(0,0,0,.06);\n  border-radius: 4px;\n  width: 400px;\n  display: flex;\n  padding: 32px;\n  margin: 32px;\n}\n\n.task-top {\n  display: flex;\n  justify-content: space-between;\n  padding: 16px;\n}\n\n.task-left {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 8px;\n}\n\n.task-bottom {\n  display: flex;\n  justify-content: center;\n  padding: 16px;\n}\n\n.task-holder {\n  width: 400px;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,iBAAiB;EACjB,aAAa;EACb,sBAAsB;EACtB,iBAAiB;EACjB,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,OAAO;AACT;;AAEA,aAAa;;AAEb;EACE,YAAY;EACZ,qBAAqB;EACrB,WAAW;EACX,kBAAkB;EAClB,YAAY;EACZ,eAAe;EACf,sDAAsD;EACtD,iBAAiB;AACnB;;AAEA;EACE,uBAAuB;EACvB,YAAY;EACZ,eAAe;AACjB;;AAEA;EACE,YAAY;EACZ,YAAY;EACZ,eAAe;EACf,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;AACrB;;AAEA;EACE,eAAe;EACf,YAAY;AACd;;AAEA;EACE,uBAAuB;EACvB,YAAY;EACZ,eAAe;AACjB;;AAEA;EACE,YAAY;EACZ,iBAAiB;EACjB,cAAc;EACd,aAAa;EACb,aAAa;EACb,sBAAsB;EACtB,8BAA8B;AAChC;;;AAGA;EACE,eAAe;AACjB;;AAEA;EACE,YAAY;EACZ,yBAAyB;AAC3B;;;AAGA,UAAU;AACV;EACE,aAAa;EACb,aAAa;EACb,sBAAsB;EACtB,8BAA8B;EAC9B,YAAY;AACd;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;;AAErB;;AAEA;EACE,sBAAsB;EACtB,wCAAwC;EACxC,kBAAkB;EAClB,YAAY;EACZ,aAAa;EACb,aAAa;EACb,YAAY;AACd;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,aAAa;AACf;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,YAAY;AACd;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,aAAa;AACf;;AAEA;EACE,YAAY;AACd",sourcesContent:["body {\n  margin: 0;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  user-select: none;\n  box-sizing: border-box;\n}\n\n.content {\n  display: flex;\n  flex: 1;\n}\n\n/* Projects */\n\n.add-item {\n  color: white;\n  background-color: red;\n  height: 32x;\n  text-align: center;\n  padding: 8px;\n  font-size: 24px;\n  /* Prevents highlighting text when user double-clicks*/\n  user-select: none;\n}\n\n.add-item:hover {\n  background-color: white;\n  color: black;\n  cursor: pointer;\n}\n\n.project-item {\n  color: white;\n  padding: 8px;\n  font-size: 24px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.delete-project {\n  font-size: 16px;\n  padding: 8px;\n}\n\n.delete-project:hover {\n  background-color: white;\n  color: black;\n  cursor: pointer;\n}\n\n.sidebar {\n  width: 300px;\n  background: black;\n  flex-shrink: 0;\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n\n.section-title {\n  font-size: 48px;\n}\n\n.sidebar .section-title {\n  color: white;\n  padding: 0px 8px 32px 8px;\n}\n\n\n/* Tasks */\n.main-container {\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 800px;\n}\n\n.task-container {\n  display: flex;\n  flex-flow: column wrap;\n  justify-content: center;\n  align-items: center;\n}\n\n.main-bottom {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n}\n\n.task-contents {\n  border: 1px solid #eee;\n  box-shadow: 2px 4px 16px rgba(0,0,0,.06);\n  border-radius: 4px;\n  width: 400px;\n  display: flex;\n  padding: 32px;\n  margin: 32px;\n}\n\n.task-top {\n  display: flex;\n  justify-content: space-between;\n  padding: 16px;\n}\n\n.task-left {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 8px;\n}\n\n.task-bottom {\n  display: flex;\n  justify-content: center;\n  padding: 16px;\n}\n\n.task-holder {\n  width: 400px;\n}"],sourceRoot:""}]);const c=a},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(a[s]=!0)}for(var l=0;l<e.length;l++){var A=[].concat(e[l]);o&&a[A[0]]||(void 0!==i&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=i),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),r&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=r):A[4]="".concat(r)),n.push(A))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */"),a=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(a).concat([i]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var i={},a=[],c=0;c<e.length;c++){var s=e[c],l=o.base?s[0]+o.base:s[0],A=i[l]||0,d="".concat(l," ").concat(A);i[l]=A+1;var u=t(d),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var f=r(p,o);o.byIndex=c,n.splice(c,0,{identifier:d,updater:f,references:1})}a.push(d)}return a}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var c=t(i[a]);n[c].references--}for(var s=o(e,r),l=0;l<i.length;l++){var A=t(i[l]);0===n[A].references&&(n[A].updater(),n.splice(A,1))}i=s}}},569:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(o){var r=n[o];if(void 0!==r)return r.exports;var i=n[o]={id:o,exports:{}};return e[o](i,i.exports,t),i.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e=t(379),n=t.n(e),o=t(795),r=t.n(o),i=t(569),a=t.n(i),c=t(565),s=t.n(c),l=t(216),A=t.n(l),d=t(589),u=t.n(d),p=t(426),f={};f.styleTagTransform=u(),f.setAttributes=s(),f.insert=a().bind(null,"head"),f.domAPI=r(),f.insertStyleElement=A(),n()(p.Z,f),p.Z&&p.Z.locals&&p.Z.locals;const m=document.querySelector(".task-container");let C;const h=(()=>{function e(e){let n=e.target.value;console.log(n)}return{createTaskView:function(n,t,o){document.createElement("div").setAttribute("class","task-item");let r=document.createElement("div");r.setAttribute("class","task-left");let i=document.createElement("input");i.setAttribute("type","checkbox"),i.setAttribute("class","radio-button");let a=document.createElement("div");a.setAttribute("class","task-contents");let c=document.createElement("div");c.setAttribute("class","task-holder");let s=document.createElement("div");s.setAttribute("class","task-top");let l=document.createElement("input");l.setAttribute("class","task-name"),l.setAttribute("id",`task${n}`),l.addEventListener("change",e);let A=document.createElement("div");A.setAttribute("class","task-bottom");let d=document.createElement("div");d.setAttribute("class","delete-task"),d.appendChild(document.createTextNode("Delete")),r.appendChild(i),s.appendChild(l),A.appendChild(d),c.appendChild(s),c.appendChild(A),a.appendChild(r),a.appendChild(c),C.appendChild(a),m.appendChild(C)},clearTaskScreen:function(){let e=document.querySelector(".removable");e&&e.remove()},initRemovableTaskContainer:function(){C=document.createElement("div"),C.setAttribute("class","removable")}}})();class E{static#e=0;taskCounter;constructor(e=null,n=null){null==e?(this.taskCounter=++E.#e,this.id=this.taskCounter,this.taskName=""):(this.id=e,this.taskName=n)}init(){h.createTaskView(this.id,this.taskName)}}const x=document.querySelector(".project-container"),b=(()=>{let e=[];return{saveProjects:function(n){e.push(n)},deleteProject:function(n){e.splice(n,1)},getProject:function(n){return e.find((e=>e.id==n))}}})(),g=(()=>{let e,n=0,t=!1;function o(){return n}function r(e){n=e}function i(){return t}function a(e){t=e}return{createProjectView:function(n){let t=document.createElement("div");t.setAttribute("class","project-item"),t.setAttribute("id",`project${n}`);let c=document.createTextNode(`Project ${n}`);t.addEventListener("click",(()=>{!function(n,t){if(0==o()&&(r(t),a(!1)),b.getCurrentProjectHighlighted!=t){let n=document.getElementById(`project${o()}`);null!=n&&(n.style.backgroundColor="black",n.style.color="white",e=n)}r(t),n.style.backgroundColor="white",n.style.color="black",a(!0)}(t,n);let i=b.getProject(n);if(h.clearTaskScreen(),i)for(task in i.tasks)new E(task.id,task.taskName).init(),console.log(`Task ${i} loaded`);console.log(`Project ${n} clicked`)})),t.appendChild(c);let s=document.createElement("div");s.setAttribute("class","delete-project"),s.appendChild(document.createTextNode("x")),s.addEventListener("click",(()=>{var e;e=n,console.log(`Status before delete -> ${i()}`),b.deleteProject(e),document.getElementById(`project${e}`).remove(),a(!1),console.log(`Status after delete -> ${i()}`)})),t.appendChild(s),x.appendChild(t)},setCurrentProjectHighlighted:r,getCurrentProjectHighlighted:o,getIsHighlightedStatus:i,setIsHighlightedStatus:a}})();class v{project={};static#e=0;projectCounter;constructor(){this.projectCounter=++v.#e,this.project.id=this.projectCounter,this.project.name=`Project ${this.projectCounter}`}init(){g.createProjectView(this.project.id)}}const B=document.querySelector(".project-container");document.querySelector(".sidebar .add-item").addEventListener("click",(function(){console.log("New Project clicked"),(new v).init()})),document.querySelector(".main-bottom .add-item").addEventListener("click",(function(){console.log("New Task clicked"),B.childNodes.length>0&b.getIsHighlightedStatus()&&(console.log(`Status after delete -> ${b.getIsHighlightedStatus()}`),(new E).init())})),h.initRemovableTaskContainer()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,